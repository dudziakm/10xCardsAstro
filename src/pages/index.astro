---
import Layout from "../layouts/Layout.astro";
import { LoginPrompt } from "../components/auth/LoginPrompt";
import { createTranslator } from "../i18n/astro-helper";

const { session, language } = Astro.locals;
const { t } = createTranslator(language);
---

<Layout title={t("home.title")}>
  <main class="container mx-auto px-4 py-8">
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold text-gray-900 mb-4" data-testid="homepage-title">my10xCards</h1>
      <p class="text-xl text-gray-600 mb-8" data-testid="homepage-subtitle">{t("home.headline")}</p>
    </div>

    <div class="grid md:grid-cols-3 gap-6 mb-8">
      <a
        href="/flashcards?filter=all"
        data-testid="stats-all-cards"
        class="bg-white border border-gray-200 rounded-lg p-6 shadow-sm hover:shadow-md hover:border-blue-300 transition-all cursor-pointer transform hover:scale-105"
      >
        <div class="text-center">
          <div class="text-3xl font-bold text-blue-600 mb-2" id="total-cards">-</div>
          <div class="text-gray-600">{t("home.stats.total")}</div>
          <div class="text-xs text-blue-500 mt-1">{t("home.stats.totalHint")}</div>
        </div>
      </a>
      <a
        href="/flashcards?filter=manual"
        data-testid="stats-manual-cards"
        class="bg-white border border-gray-200 rounded-lg p-6 shadow-sm hover:shadow-md hover:border-green-300 transition-all cursor-pointer transform hover:scale-105"
      >
        <div class="text-center">
          <div class="text-3xl font-bold text-green-600 mb-2" id="manual-cards">-</div>
          <div class="text-gray-600">{t("home.stats.manual")}</div>
          <div class="text-xs text-green-500 mt-1">{t("home.stats.manualHint")}</div>
        </div>
      </a>
      <a
        href="/flashcards?filter=ai"
        data-testid="stats-ai-cards"
        class="bg-white border border-gray-200 rounded-lg p-6 shadow-sm hover:shadow-md hover:border-purple-300 transition-all cursor-pointer transform hover:scale-105"
      >
        <div class="text-center">
          <div class="text-3xl font-bold text-purple-600 mb-2" id="ai-cards">-</div>
          <div class="text-gray-600">{t("home.stats.ai")}</div>
          <div class="text-xs text-purple-500 mt-1">{t("home.stats.aiHint")}</div>
        </div>
      </a>
    </div>

    <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-4">
      <a
        href="/flashcards"
        data-testid="action-my-flashcards"
        class="bg-blue-500 hover:bg-blue-600 text-white rounded-lg p-6 text-center transition-colors"
      >
        <div class="text-2xl mb-2">ðŸ“š</div>
        <div class="font-semibold">{t("home.actions.flashcards")}</div>
      </a>
      <a
        href="/flashcards/new"
        data-testid="action-add-flashcard"
        class="bg-green-500 hover:bg-green-600 text-white rounded-lg p-6 text-center transition-colors"
      >
        <div class="text-2xl mb-2">âž•</div>
        <div class="font-semibold">{t("home.actions.addFlashcard")}</div>
      </a>
      <a
        href="/generate"
        data-testid="action-generate-ai"
        class="bg-purple-500 hover:bg-purple-600 text-white rounded-lg p-6 text-center transition-colors"
      >
        <div class="text-2xl mb-2">ðŸ¤–</div>
        <div class="font-semibold">{t("home.actions.generate")}</div>
      </a>
      <a
        href="/learn"
        data-testid="action-learn"
        class="bg-orange-500 hover:bg-orange-600 text-white rounded-lg p-6 text-center transition-colors"
      >
        <div class="text-2xl mb-2">ðŸ§ </div>
        <div class="font-semibold">{t("home.actions.learn")}</div>
      </a>
    </div>

    {
      !session && (
        <div class="mt-12">
          <LoginPrompt client:load />
        </div>
      )
    }

    {
      session && (
        <div class="mt-8 text-center">
          <p class="text-green-600 font-medium">ðŸ‘‹ {t("home.welcome")}</p>
        </div>
      )
    }
  </main>
</Layout>

<script type="module" is:inline>
  /* eslint-disable */
  // Load dashboard stats
  async function loadStats() {
    try {
      const response = await fetch("/api/flashcards?limit=1");
      if (response.ok) {
        const data = await response.json();
        const totalCardsEl = document.getElementById("total-cards");
        if (totalCardsEl) totalCardsEl.textContent = data.pagination.total_items.toString();

        // Load manual cards
        const manualResponse = await fetch("/api/flashcards?limit=1&source=manual");
        if (manualResponse.ok) {
          const manualData = await manualResponse.json();
          const manualCardsEl = document.getElementById("manual-cards");
          if (manualCardsEl) manualCardsEl.textContent = manualData.pagination.total_items.toString();
        }

        // Load AI cards
        const aiResponse = await fetch("/api/flashcards?limit=1&source=ai");
        if (aiResponse.ok) {
          const aiData = await aiResponse.json();
          const aiCardsEl = document.getElementById("ai-cards");
          if (aiCardsEl) aiCardsEl.textContent = aiData.pagination.total_items.toString();
        }
      }
    } catch {
      const totalCardsEl = document.getElementById("total-cards");
      const manualCardsEl = document.getElementById("manual-cards");
      const aiCardsEl = document.getElementById("ai-cards");
      if (totalCardsEl) totalCardsEl.textContent = "0";
      if (manualCardsEl) manualCardsEl.textContent = "0";
      if (aiCardsEl) aiCardsEl.textContent = "0";
    }
  }

  // Only load stats if user is logged in
  const isLoggedIn = document.querySelector("nav").textContent.includes("Wyloguj");
  if (isLoggedIn) {
    loadStats();
  }
</script>
